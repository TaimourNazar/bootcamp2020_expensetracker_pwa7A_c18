{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/AccountSummary.js","components/Transaction.js","components/TransactionHistory.js","components/AddTransaction.js","firebase.js","App.js","index.js","swDev.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","delTransaction","addTransaction","Balance","balance","useContext","map","transactionAmount","reduce","acc","item","toFixed","AccountSummary","transactionAmounts","income","expense","Math","abs","className","Transaction","sign","transactionType","description","onClick","TransactionHistory","key","AddTransaction","useState","setDescription","setTransactionAmount","onSubmit","e","preventDefault","newTransaction","Date","getTime","htmlFor","onChange","target","placeholder","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","messaging","requestPermission","then","getToken","token","prompt","console","log","ReactDOM","render","StrictMode","document","getElementById","swUrl","process","navigator","serviceWorker","register","result","catch","err","swDev"],"mappings":"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","file":"static/js/main.7f7e6c71.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = () => {\n    return (\n        <h1>\n            *~React Expense Tracker~*\n        </h1>\n    )\n}","export default (state,action)=>{\n    switch(action.type){\n        case 'DELETE_TRANSACTION':\n            return{\n                ...state,\n                transactions: state.transactions.filter(transaction=>transaction.id!==action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return{\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        default:\n            return state;\n    };\n}","import React, {createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer';\n\nconst initialState={\n    transactions:[]\n}\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider =({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    function delTransaction(id){\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    }\n\n    function addTransaction(transaction){\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n    return(\n        <GlobalContext.Provider value={\n            {\n                transactions:state.transactions,\n                delTransaction,\n                addTransaction\n            }\n        }>\n            {children}\n        </GlobalContext.Provider>\n    );\n}","import React, {useContext} from 'react';\n\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const Balance = () => {\n    const {transactions}=useContext(GlobalContext);\n    const transactionAmount=transactions.map(transaction=>transaction.transactionAmount);\n    const balance = transactionAmount.reduce((acc,item)=>(acc+=item),0).toFixed(2);\n    return (\n        <div>\n            <h4>Current Balance</h4>\n            <h1 id=\"balance\">${balance}</h1>\n        </div>\n    )\n}\n","import React,{useContext} from 'react';\n\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const AccountSummary = () => {\n\n    const {transactions} = useContext(GlobalContext);\n    const transactionAmounts=transactions.map(transaction=> transaction.transactionAmount);\n    const income = transactionAmounts\n        .filter(transaction=>transaction > 0)\n        .reduce((acc,transaction)=>(acc+=transaction),0)\n        .toFixed(2);\n    \n    const expense = Math.abs(transactionAmounts\n        .filter(transaction=>transaction < 0)\n        .reduce((acc,transaction)=>(acc+=transaction),0)\n        .toFixed(2));\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">\n                    ${income}\n                </p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p className=\"money minus\">\n                    ${expense}\n                </p>\n            </div>\n        </div>\n    )\n}\n","import React, {useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const Transaction = ({transaction}) => {\n    const {delTransaction}=useContext(GlobalContext);\n    const sign = transaction.transactionAmount>0?'+':'-';\n    const transactionType = transaction.transactionAmount>0?'plus':'minus';\n    return (\n        <li className={transactionType}>\n            {transaction.description}\n            <span>{sign}${Math.abs(transaction.transactionAmount)}</span>\n            <button className=\"delete-btn\" onClick={()=>delTransaction(transaction.id)}>X</button>\n        </li>\n    )\n}\n","import React, {useContext} from 'react';\n\nimport {Transaction} from './Transaction';\n\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const TransactionHistory = () => {\n    const {transactions} = useContext(GlobalContext);\n    //console.log(transactions);\n    return (\n        <div>\n            <h3>\n                Transaction History\n            </h3>\n            <ul className=\"list\">\n                {transactions.map(transaction=>(<Transaction key={transaction.id} transaction={transaction}/>))}\n            </ul>\n        </div>\n    )\n}\n","import React, {useState,useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\nexport const AddTransaction = () => {\n    \n    const [description, setDescription]=useState('');\n    const [transactionAmount, setTransactionAmount]=useState(0);\n    const {addTransaction} = useContext(GlobalContext);\n\n    const onSubmit=(e)=>{\n        e.preventDefault();\n        const newTransaction={\n            id: new Date().getTime(),\n            description,\n            transactionAmount: +transactionAmount\n        }\n        addTransaction(newTransaction);\n    }\n\n    return (\n        <div>\n            <h3>Add New Transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"description\">\n                        Description\n                    </label>\n                    <input type=\"text\"\n                        id=\"description\"\n                        value={description}\n                        onChange={(e)=> setDescription(e.target.value)}\n                        placeholder=\"Detail of Transaction\"/>\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"transactionamount\">\n                        Transaction Amount\n                    </label>\n                    <input type=\"number\"\n                        id=\"transactionamount\"\n                        value={transactionAmount}\n                        onChange={(e)=>setTransactionAmount(e.target.value)}\n                        placeholder=\"Dollar Value of Transaction\" />\n                </div>\n                <button className=\"btn\">Add Transaction</button>\n            </form>\n        </div>\n    )\n}\n","import firebase from 'firebase';\n\nconst config={\n    apiKey: \"AIzaSyBwnVUs3JqM4rqwFI0O8C1FCKnqqkOziDk\",\n    authDomain: \"expense-tracker-msg.firebaseapp.com\",\n    databaseURL: \"https://expense-tracker-msg.firebaseio.com\",\n    projectId: \"expense-tracker-msg\",\n    storageBucket: \"expense-tracker-msg.appspot.com\",\n    messagingSenderId: \"819464093069\",\n    appId: \"1:819464093069:web:494ee45020bdcdf2d951c4\"\n}\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport './App.css';\nimport {Header} from './components/Header';\nimport {Balance} from './components/Balance';\nimport {AccountSummary} from './components/AccountSummary';\nimport {TransactionHistory} from './components/TransactionHistory';\nimport {AddTransaction} from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\nimport firebase from './firebase';\nfunction App() {\n  const messaging=firebase.messaging();\n  messaging.requestPermission().then(()=>{\n    return messaging.getToken()\n  }).then((token)=>{\n    prompt('token',token);\n    console.log('token',token);\n  })\n  return (\n    <GlobalProvider>\n        <Header/>\n        <div className=\"container\">\n          <Balance/>\n          <AccountSummary/>\n          <TransactionHistory/>\n          <AddTransaction/>\n        </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport swDev from './swDev';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nswDev();\n","export default function swDev(){\n    let swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n    navigator.serviceWorker.register(swUrl).then((result)=>{\n        console.log('result',result);\n    })\n    .catch((err)=>{\n        console.log('err',err);\n    })\n}"],"sourceRoot":""}